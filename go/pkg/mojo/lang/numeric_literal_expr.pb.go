// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mojo/lang/numeric_literal_expr.proto

package lang

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NumericLiteralExpr struct {
	StartPosition        *Position `protobuf:"bytes,1,opt,name=start_position,json=startPosition,proto3" json:"startPosition,omitempty"`
	EndPosition          *Position `protobuf:"bytes,2,opt,name=end_position,json=endPosition,proto3" json:"endPosition,omitempty"`
	Kind                 int32     `protobuf:"varint,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Implicit             bool      `protobuf:"varint,4,opt,name=implicit,proto3" json:"implicit,omitempty"`
	IsNegative           bool      `protobuf:"varint,15,opt,name=is_negative,json=isNegative,proto3" json:"isNegative,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NumericLiteralExpr) Reset()         { *m = NumericLiteralExpr{} }
func (m *NumericLiteralExpr) String() string { return proto.CompactTextString(m) }
func (*NumericLiteralExpr) ProtoMessage()    {}
func (*NumericLiteralExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5b419d61777aad9, []int{0}
}
func (m *NumericLiteralExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumericLiteralExpr.Unmarshal(m, b)
}
func (m *NumericLiteralExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumericLiteralExpr.Marshal(b, m, deterministic)
}
func (m *NumericLiteralExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumericLiteralExpr.Merge(m, src)
}
func (m *NumericLiteralExpr) XXX_Size() int {
	return xxx_messageInfo_NumericLiteralExpr.Size(m)
}
func (m *NumericLiteralExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_NumericLiteralExpr.DiscardUnknown(m)
}

var xxx_messageInfo_NumericLiteralExpr proto.InternalMessageInfo

func (m *NumericLiteralExpr) GetStartPosition() *Position {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *NumericLiteralExpr) GetEndPosition() *Position {
	if m != nil {
		return m.EndPosition
	}
	return nil
}

func (m *NumericLiteralExpr) GetKind() int32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *NumericLiteralExpr) GetImplicit() bool {
	if m != nil {
		return m.Implicit
	}
	return false
}

func (m *NumericLiteralExpr) GetIsNegative() bool {
	if m != nil {
		return m.IsNegative
	}
	return false
}

func init() {
	proto.RegisterType((*NumericLiteralExpr)(nil), "mojo.lang.NumericLiteralExpr")
}

func init() {
	proto.RegisterFile("mojo/lang/numeric_literal_expr.proto", fileDescriptor_b5b419d61777aad9)
}

var fileDescriptor_b5b419d61777aad9 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x49, 0xff, 0xfe, 0x52, 0xa7, 0x5a, 0x61, 0xac, 0x6d, 0xac, 0x42, 0x8a, 0x88, 0x74,
	0xa1, 0x09, 0xd4, 0x95, 0xb8, 0x0b, 0xb8, 0x93, 0x52, 0xdd, 0x08, 0x6e, 0x42, 0xda, 0x0c, 0xf1,
	0xda, 0x64, 0x66, 0x98, 0x4c, 0xa5, 0x3e, 0xa9, 0xbb, 0x3c, 0x40, 0x9e, 0x42, 0x66, 0xd2, 0x64,
	0x22, 0xd5, 0xcd, 0x85, 0x9c, 0xf3, 0x9d, 0x9b, 0xdc, 0x1c, 0x74, 0x99, 0xb2, 0x77, 0xe6, 0x25,
	0x21, 0x8d, 0x3d, 0xba, 0x4e, 0x89, 0x80, 0x65, 0x90, 0x80, 0x24, 0x22, 0x4c, 0x02, 0xb2, 0xe1,
	0xc2, 0xe5, 0x82, 0x49, 0x86, 0xf7, 0x15, 0xe5, 0x2a, 0x6a, 0xd4, 0x37, 0x01, 0x03, 0x8c, 0xce,
	0x8d, 0xba, 0x1b, 0x1f, 0xd9, 0xc6, 0xe5, 0x2c, 0x03, 0x09, 0x8c, 0x96, 0xce, 0xc5, 0x57, 0x0b,
	0xe1, 0x59, 0xf9, 0xde, 0xc7, 0x32, 0xf7, 0xb0, 0xe1, 0x02, 0xbf, 0xa0, 0x5e, 0x26, 0x43, 0x21,
	0x83, 0x0a, 0xb7, 0xad, 0xb1, 0x35, 0xe9, 0x4e, 0x8f, 0xdd, 0xfa, 0x43, 0xdc, 0xf9, 0xd6, 0xf2,
	0xcf, 0x8a, 0xdc, 0x19, 0x6a, 0xbc, 0x92, 0xae, 0x59, 0x0a, 0x92, 0xa4, 0x5c, 0x7e, 0x3e, 0x1f,
	0xfe, 0x30, 0xf0, 0x13, 0x3a, 0x20, 0x34, 0x32, 0x6b, 0x5b, 0x7f, 0xaf, 0x3d, 0x2d, 0x72, 0xe7,
	0x84, 0xd0, 0xe8, 0x97, 0xa5, 0xdd, 0x86, 0x8c, 0xaf, 0x50, 0x7b, 0x05, 0x34, 0xb2, 0xff, 0x8d,
	0xad, 0xc9, 0x7f, 0x1f, 0x17, 0xb9, 0xd3, 0x53, 0xcf, 0x0d, 0x5c, 0xfb, 0x78, 0x8a, 0x3a, 0x90,
	0xf2, 0x04, 0x96, 0x20, 0xed, 0xf6, 0xd8, 0x9a, 0x74, 0xfc, 0x41, 0x91, 0x3b, 0xb8, 0xd2, 0x1a,
	0x7c, 0xcd, 0xe1, 0x3b, 0xd4, 0x85, 0x2c, 0xa0, 0x24, 0x0e, 0x25, 0x7c, 0x10, 0xfb, 0x48, 0xc7,
	0xec, 0x22, 0x77, 0xfa, 0x90, 0xcd, 0xb6, 0x6a, 0x23, 0x88, 0x8c, 0xea, 0x47, 0x68, 0xc0, 0x44,
	0xac, 0x0f, 0xd3, 0x77, 0xd5, 0x17, 0xfa, 0xc3, 0xdd, 0x1f, 0x3e, 0x57, 0x65, 0xcc, 0xad, 0x57,
	0x2f, 0x06, 0xf9, 0xb6, 0x5e, 0xb8, 0x4b, 0x96, 0x7a, 0x2a, 0x70, 0x53, 0x36, 0xaa, 0x46, 0xcc,
	0x3c, 0xbe, 0x8a, 0xbd, 0xba, 0xc9, 0x7b, 0x35, 0x16, 0x7b, 0xba, 0xc6, 0xdb, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x5b, 0xb7, 0x8a, 0x78, 0x47, 0x02, 0x00, 0x00,
}
