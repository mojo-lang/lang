// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mojo/lang/declaration.proto

package lang

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Declaration struct {
	// Types that are valid to be assigned to Declaration:
	//	*Declaration_EnumDecl
	//	*Declaration_StructDecl
	//	*Declaration_InterfaceDecl
	//	*Declaration_NominalDecl
	//	*Declaration_FuncDecl
	//	*Declaration_ConstDecl
	//	*Declaration_ValueDecl
	//	*Declaration_PackageDecl
	//	*Declaration_ImportDecl
	Declaration          isDeclaration_Declaration `protobuf_oneof:"declaration"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Declaration) Reset()         { *m = Declaration{} }
func (m *Declaration) String() string { return proto.CompactTextString(m) }
func (*Declaration) ProtoMessage()    {}
func (*Declaration) Descriptor() ([]byte, []int) {
	return fileDescriptor_993ae8e969e37896, []int{0}
}

func (m *Declaration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Declaration.Unmarshal(m, b)
}
func (m *Declaration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Declaration.Marshal(b, m, deterministic)
}
func (m *Declaration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Declaration.Merge(m, src)
}
func (m *Declaration) XXX_Size() int {
	return xxx_messageInfo_Declaration.Size(m)
}
func (m *Declaration) XXX_DiscardUnknown() {
	xxx_messageInfo_Declaration.DiscardUnknown(m)
}

var xxx_messageInfo_Declaration proto.InternalMessageInfo

type isDeclaration_Declaration interface {
	isDeclaration_Declaration()
}

type Declaration_EnumDecl struct {
	EnumDecl *EnumDecl `protobuf:"bytes,2,opt,name=enum_decl,json=enumDecl,proto3,oneof"`
}

type Declaration_StructDecl struct {
	StructDecl *StructDecl `protobuf:"bytes,3,opt,name=struct_decl,json=structDecl,proto3,oneof"`
}

type Declaration_InterfaceDecl struct {
	InterfaceDecl *InterfaceDecl `protobuf:"bytes,4,opt,name=interface_decl,json=interfaceDecl,proto3,oneof"`
}

type Declaration_NominalDecl struct {
	NominalDecl *NominalDecl `protobuf:"bytes,5,opt,name=nominal_decl,json=nominalDecl,proto3,oneof"`
}

type Declaration_FuncDecl struct {
	FuncDecl *FuncDecl `protobuf:"bytes,7,opt,name=func_decl,json=funcDecl,proto3,oneof"`
}

type Declaration_ConstDecl struct {
	ConstDecl *ConstDecl `protobuf:"bytes,10,opt,name=const_decl,json=constDecl,proto3,oneof"`
}

type Declaration_ValueDecl struct {
	ValueDecl *ValueDecl `protobuf:"bytes,11,opt,name=value_decl,json=valueDecl,proto3,oneof"`
}

type Declaration_PackageDecl struct {
	PackageDecl *PackageDecl `protobuf:"bytes,12,opt,name=package_decl,json=packageDecl,proto3,oneof"`
}

type Declaration_ImportDecl struct {
	ImportDecl *ImportDecl `protobuf:"bytes,13,opt,name=import_decl,json=importDecl,proto3,oneof"`
}

func (*Declaration_EnumDecl) isDeclaration_Declaration() {}

func (*Declaration_StructDecl) isDeclaration_Declaration() {}

func (*Declaration_InterfaceDecl) isDeclaration_Declaration() {}

func (*Declaration_NominalDecl) isDeclaration_Declaration() {}

func (*Declaration_FuncDecl) isDeclaration_Declaration() {}

func (*Declaration_ConstDecl) isDeclaration_Declaration() {}

func (*Declaration_ValueDecl) isDeclaration_Declaration() {}

func (*Declaration_PackageDecl) isDeclaration_Declaration() {}

func (*Declaration_ImportDecl) isDeclaration_Declaration() {}

func (m *Declaration) GetDeclaration() isDeclaration_Declaration {
	if m != nil {
		return m.Declaration
	}
	return nil
}

func (m *Declaration) GetEnumDecl() *EnumDecl {
	if x, ok := m.GetDeclaration().(*Declaration_EnumDecl); ok {
		return x.EnumDecl
	}
	return nil
}

func (m *Declaration) GetStructDecl() *StructDecl {
	if x, ok := m.GetDeclaration().(*Declaration_StructDecl); ok {
		return x.StructDecl
	}
	return nil
}

func (m *Declaration) GetInterfaceDecl() *InterfaceDecl {
	if x, ok := m.GetDeclaration().(*Declaration_InterfaceDecl); ok {
		return x.InterfaceDecl
	}
	return nil
}

func (m *Declaration) GetNominalDecl() *NominalDecl {
	if x, ok := m.GetDeclaration().(*Declaration_NominalDecl); ok {
		return x.NominalDecl
	}
	return nil
}

func (m *Declaration) GetFuncDecl() *FuncDecl {
	if x, ok := m.GetDeclaration().(*Declaration_FuncDecl); ok {
		return x.FuncDecl
	}
	return nil
}

func (m *Declaration) GetConstDecl() *ConstDecl {
	if x, ok := m.GetDeclaration().(*Declaration_ConstDecl); ok {
		return x.ConstDecl
	}
	return nil
}

func (m *Declaration) GetValueDecl() *ValueDecl {
	if x, ok := m.GetDeclaration().(*Declaration_ValueDecl); ok {
		return x.ValueDecl
	}
	return nil
}

func (m *Declaration) GetPackageDecl() *PackageDecl {
	if x, ok := m.GetDeclaration().(*Declaration_PackageDecl); ok {
		return x.PackageDecl
	}
	return nil
}

func (m *Declaration) GetImportDecl() *ImportDecl {
	if x, ok := m.GetDeclaration().(*Declaration_ImportDecl); ok {
		return x.ImportDecl
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Declaration) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Declaration_OneofMarshaler, _Declaration_OneofUnmarshaler, _Declaration_OneofSizer, []interface{}{
		(*Declaration_EnumDecl)(nil),
		(*Declaration_StructDecl)(nil),
		(*Declaration_InterfaceDecl)(nil),
		(*Declaration_NominalDecl)(nil),
		(*Declaration_FuncDecl)(nil),
		(*Declaration_ConstDecl)(nil),
		(*Declaration_ValueDecl)(nil),
		(*Declaration_PackageDecl)(nil),
		(*Declaration_ImportDecl)(nil),
	}
}

func _Declaration_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Declaration)
	// declaration
	switch x := m.Declaration.(type) {
	case *Declaration_EnumDecl:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EnumDecl); err != nil {
			return err
		}
	case *Declaration_StructDecl:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StructDecl); err != nil {
			return err
		}
	case *Declaration_InterfaceDecl:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InterfaceDecl); err != nil {
			return err
		}
	case *Declaration_NominalDecl:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NominalDecl); err != nil {
			return err
		}
	case *Declaration_FuncDecl:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FuncDecl); err != nil {
			return err
		}
	case *Declaration_ConstDecl:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConstDecl); err != nil {
			return err
		}
	case *Declaration_ValueDecl:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ValueDecl); err != nil {
			return err
		}
	case *Declaration_PackageDecl:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackageDecl); err != nil {
			return err
		}
	case *Declaration_ImportDecl:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImportDecl); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Declaration.Declaration has unexpected type %T", x)
	}
	return nil
}

func _Declaration_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Declaration)
	switch tag {
	case 2: // declaration.enum_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnumDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_EnumDecl{msg}
		return true, err
	case 3: // declaration.struct_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StructDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_StructDecl{msg}
		return true, err
	case 4: // declaration.interface_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InterfaceDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_InterfaceDecl{msg}
		return true, err
	case 5: // declaration.nominal_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NominalDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_NominalDecl{msg}
		return true, err
	case 7: // declaration.func_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FuncDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_FuncDecl{msg}
		return true, err
	case 10: // declaration.const_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConstDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_ConstDecl{msg}
		return true, err
	case 11: // declaration.value_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValueDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_ValueDecl{msg}
		return true, err
	case 12: // declaration.package_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PackageDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_PackageDecl{msg}
		return true, err
	case 13: // declaration.import_decl
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ImportDecl)
		err := b.DecodeMessage(msg)
		m.Declaration = &Declaration_ImportDecl{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Declaration_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Declaration)
	// declaration
	switch x := m.Declaration.(type) {
	case *Declaration_EnumDecl:
		s := proto.Size(x.EnumDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_StructDecl:
		s := proto.Size(x.StructDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_InterfaceDecl:
		s := proto.Size(x.InterfaceDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_NominalDecl:
		s := proto.Size(x.NominalDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_FuncDecl:
		s := proto.Size(x.FuncDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_ConstDecl:
		s := proto.Size(x.ConstDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_ValueDecl:
		s := proto.Size(x.ValueDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_PackageDecl:
		s := proto.Size(x.PackageDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Declaration_ImportDecl:
		s := proto.Size(x.ImportDecl)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Declaration)(nil), "mojo.lang.Declaration")
}

func init() { proto.RegisterFile("mojo/lang/declaration.proto", fileDescriptor_993ae8e969e37896) }

var fileDescriptor_993ae8e969e37896 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xdb, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x9d, 0xce, 0xcb, 0xd2, 0x4d, 0xa4, 0xce, 0x51, 0xa6, 0x0f, 0xe2, 0x93, 0x08, 0xb6,
	0x30, 0x11, 0x84, 0x3d, 0x39, 0x2f, 0xb8, 0x17, 0x19, 0x0a, 0x22, 0xbe, 0x48, 0x16, 0xbb, 0x1a,
	0xd7, 0x26, 0x25, 0x4b, 0x06, 0xfe, 0x3d, 0xfe, 0xa3, 0x72, 0x72, 0x69, 0x03, 0x7d, 0x29, 0x39,
	0xf9, 0xce, 0xef, 0x4b, 0x3f, 0xce, 0x41, 0xc7, 0x05, 0xff, 0xe1, 0x49, 0x8e, 0x59, 0x96, 0x7c,
	0xa5, 0x24, 0xc7, 0x02, 0x4b, 0xca, 0x59, 0x5c, 0x0a, 0x2e, 0x79, 0xd8, 0x01, 0x31, 0x06, 0x71,
	0xd8, 0xaf, 0xfb, 0xe4, 0x6f, 0x99, 0x9a, 0x86, 0xe1, 0x49, 0x7d, 0x5b, 0x62, 0xb2, 0xc4, 0x59,
	0xfa, 0x09, 0x2e, 0x56, 0xf5, 0xbc, 0x69, 0x51, 0x72, 0x21, 0x3d, 0xf1, 0xec, 0xaf, 0x8d, 0x82,
	0xfb, 0xfa, 0xc5, 0x70, 0x84, 0x3a, 0x29, 0x53, 0x85, 0x6e, 0x89, 0x36, 0x4f, 0x5b, 0xe7, 0xc1,
	0xe8, 0x30, 0xae, 0xde, 0x8f, 0x1f, 0x98, 0x2a, 0xa0, 0xfd, 0x69, 0xe3, 0x65, 0x2f, 0xb5, 0xe7,
	0xf0, 0x06, 0x05, 0x2b, 0x29, 0x14, 0x31, 0xc6, 0xd1, 0x96, 0xa6, 0x8e, 0x3c, 0xea, 0x55, 0xab,
	0x96, 0x43, 0xab, 0xaa, 0x0a, 0x6f, 0xd1, 0x3e, 0x65, 0x32, 0x15, 0x0b, 0x4c, 0xcc, 0x2f, 0x47,
	0x6d, 0x0d, 0x47, 0x1e, 0x3c, 0x75, 0x0d, 0x96, 0xef, 0x51, 0xff, 0x22, 0x1c, 0xa3, 0x2e, 0xe3,
	0x05, 0x65, 0x38, 0x37, 0x06, 0xdb, 0xda, 0x60, 0xe0, 0x19, 0x3c, 0x1b, 0xd9, 0xe2, 0x01, 0xab,
	0x4b, 0x48, 0xbb, 0x50, 0x8c, 0x18, 0x72, 0xb7, 0x91, 0xf6, 0x51, 0x31, 0xe2, 0xd2, 0x2e, 0xec,
	0x39, 0xbc, 0x46, 0x88, 0x70, 0xb6, 0xb2, 0x61, 0x91, 0x86, 0xfa, 0x1e, 0x74, 0x07, 0xa2, 0xa5,
	0x3a, 0xc4, 0x15, 0x80, 0xad, 0x71, 0xae, 0x6c, 0xcc, 0xa0, 0x81, 0xbd, 0x81, 0xe8, 0xb0, 0xb5,
	0x2b, 0x20, 0x9e, 0x3f, 0xd2, 0xa8, 0xdb, 0x88, 0x37, 0x33, 0xb2, 0x8b, 0x57, 0xd6, 0x25, 0x0c,
	0xc6, 0x9b, 0x78, 0xd4, 0x6b, 0x0c, 0x66, 0xaa, 0x55, 0x37, 0x18, 0x5a, 0x55, 0x93, 0x1e, 0x0a,
	0xbc, 0x3d, 0x9c, 0xbc, 0xa3, 0x01, 0x17, 0x99, 0x06, 0x35, 0x57, 0x39, 0x4c, 0x0e, 0xbc, 0xe5,
	0x99, 0xc1, 0x46, 0xcd, 0x5a, 0x1f, 0x17, 0x19, 0x95, 0xdf, 0x6a, 0x1e, 0x13, 0x5e, 0x24, 0xd0,
	0x79, 0xa9, 0x77, 0x4f, 0x7f, 0x32, 0x9e, 0x94, 0x4b, 0x73, 0x1e, 0xc3, 0x67, 0xbe, 0xa3, 0xd7,
	0xf0, 0xea, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x38, 0x27, 0xa4, 0x26, 0x01, 0x03, 0x00, 0x00,
}
