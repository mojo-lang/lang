syntax = "proto3";

package mojo.lang;

import "mojo/lang/statement.proto";

import "mojo/lang/expression.proto";
import "mojo/lang/position.proto";
import "mojo/lang/document.proto";

option go_package = "github.com/mojo-lang/lang/go/pkg/lang;lang";

option java_multiple_files = true;
option java_outer_classname = "SourceFileProto";
option java_package = "org.mojolang.mojo.lang";


// A File node represents a Go source file.
//
// The Comments list contains all comments in the source file in order of
// appearance, including the comments that are pointed to from other nodes
// via Doc and Comment fields.
//
// For correct printing of source code containing comments (using packages
// go/format and go/printer), special care must be taken to update comments
// when a File's syntax tree is modified: For printing, comments are
// interspersed between tokens based on their position. If syntax tree nodes are
// removed or moved, relevant comments in their vicinity must also be removed
// (from the File.Comments list) or moved accordingly (by updating their
// positions). A CommentMap may be used to facilitate some of these operations.
//
// Whether and how a comment is associated with a node depends on the
// interpretation of the syntax tree by the manipulating program: Except for Doc
// and Comment comments directly associated with nodes, the remaining comments
// are "free-floating" (see also issues #18593, #20744).
//
message SourceFile {
  string name = 1;
  string full_name = 2;
  string package = 3;
  // scope:      Scope @4

  /// statements
  repeated Statement statements = 5;

  ///
  // decl_groups: [DeclGroup] @6
}
