// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mojo/lang/lang.proto

package org.mojolang.mojo.lang;

public interface PackageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:mojo.lang.Package)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>string full_name = 2;</code>
   * @return The fullName.
   */
  java.lang.String getFullName();
  /**
   * <code>string full_name = 2;</code>
   * @return The bytes for fullName.
   */
  com.google.protobuf.ByteString
      getFullNameBytes();

  /**
   * <code>.mojo.core.Version version = 3;</code>
   * @return Whether the version field is set.
   */
  boolean hasVersion();
  /**
   * <code>.mojo.core.Version version = 3;</code>
   * @return The version.
   */
  org.mojolang.mojo.core.Version getVersion();
  /**
   * <code>.mojo.core.Version version = 3;</code>
   */
  org.mojolang.mojo.core.VersionOrBuilder getVersionOrBuilder();

  /**
   * <code>repeated .mojo.lang.Package children = 6;</code>
   */
  java.util.List<org.mojolang.mojo.lang.Package> 
      getChildrenList();
  /**
   * <code>repeated .mojo.lang.Package children = 6;</code>
   */
  org.mojolang.mojo.lang.Package getChildren(int index);
  /**
   * <code>repeated .mojo.lang.Package children = 6;</code>
   */
  int getChildrenCount();
  /**
   * <code>repeated .mojo.lang.Package children = 6;</code>
   */
  java.util.List<? extends org.mojolang.mojo.lang.PackageOrBuilder> 
      getChildrenOrBuilderList();
  /**
   * <code>repeated .mojo.lang.Package children = 6;</code>
   */
  org.mojolang.mojo.lang.PackageOrBuilder getChildrenOrBuilder(
      int index);

  /**
   * <code>repeated .mojo.lang.Package.Author authors = 7;</code>
   */
  java.util.List<org.mojolang.mojo.lang.Package.Author> 
      getAuthorsList();
  /**
   * <code>repeated .mojo.lang.Package.Author authors = 7;</code>
   */
  org.mojolang.mojo.lang.Package.Author getAuthors(int index);
  /**
   * <code>repeated .mojo.lang.Package.Author authors = 7;</code>
   */
  int getAuthorsCount();
  /**
   * <code>repeated .mojo.lang.Package.Author authors = 7;</code>
   */
  java.util.List<? extends org.mojolang.mojo.lang.Package.AuthorOrBuilder> 
      getAuthorsOrBuilderList();
  /**
   * <code>repeated .mojo.lang.Package.Author authors = 7;</code>
   */
  org.mojolang.mojo.lang.Package.AuthorOrBuilder getAuthorsOrBuilder(
      int index);

  /**
   * <code>string summary = 8;</code>
   * @return The summary.
   */
  java.lang.String getSummary();
  /**
   * <code>string summary = 8;</code>
   * @return The bytes for summary.
   */
  com.google.protobuf.ByteString
      getSummaryBytes();

  /**
   * <code>string description = 10;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <code>string description = 10;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <code>.mojo.lang.CachedDocument document = 11;</code>
   * @return Whether the document field is set.
   */
  boolean hasDocument();
  /**
   * <code>.mojo.lang.CachedDocument document = 11;</code>
   * @return The document.
   */
  org.mojolang.mojo.lang.CachedDocument getDocument();
  /**
   * <code>.mojo.lang.CachedDocument document = 11;</code>
   */
  org.mojolang.mojo.lang.CachedDocumentOrBuilder getDocumentOrBuilder();

  /**
   * <code>.mojo.core.Url repository = 12;</code>
   * @return Whether the repository field is set.
   */
  boolean hasRepository();
  /**
   * <code>.mojo.core.Url repository = 12;</code>
   * @return The repository.
   */
  org.mojolang.mojo.core.Url getRepository();
  /**
   * <code>.mojo.core.Url repository = 12;</code>
   */
  org.mojolang.mojo.core.UrlOrBuilder getRepositoryOrBuilder();

  /**
   * <code>string license = 13;</code>
   * @return The license.
   */
  java.lang.String getLicense();
  /**
   * <code>string license = 13;</code>
   * @return The bytes for license.
   */
  com.google.protobuf.ByteString
      getLicenseBytes();

  /**
   * <code>repeated string exports = 15;</code>
   * @return A list containing the exports.
   */
  java.util.List<java.lang.String>
      getExportsList();
  /**
   * <code>repeated string exports = 15;</code>
   * @return The count of exports.
   */
  int getExportsCount();
  /**
   * <code>repeated string exports = 15;</code>
   * @param index The index of the element to return.
   * @return The exports at the given index.
   */
  java.lang.String getExports(int index);
  /**
   * <code>repeated string exports = 15;</code>
   * @param index The index of the value to return.
   * @return The bytes of the exports at the given index.
   */
  com.google.protobuf.ByteString
      getExportsBytes(int index);

  /**
   * <code>repeated .mojo.lang.SourceFile source_files = 16;</code>
   */
  java.util.List<org.mojolang.mojo.lang.SourceFile> 
      getSourceFilesList();
  /**
   * <code>repeated .mojo.lang.SourceFile source_files = 16;</code>
   */
  org.mojolang.mojo.lang.SourceFile getSourceFiles(int index);
  /**
   * <code>repeated .mojo.lang.SourceFile source_files = 16;</code>
   */
  int getSourceFilesCount();
  /**
   * <code>repeated .mojo.lang.SourceFile source_files = 16;</code>
   */
  java.util.List<? extends org.mojolang.mojo.lang.SourceFileOrBuilder> 
      getSourceFilesOrBuilderList();
  /**
   * <code>repeated .mojo.lang.SourceFile source_files = 16;</code>
   */
  org.mojolang.mojo.lang.SourceFileOrBuilder getSourceFilesOrBuilder(
      int index);

  /**
   * <code>.mojo.lang.Scope scope = 20;</code>
   * @return Whether the scope field is set.
   */
  boolean hasScope();
  /**
   * <code>.mojo.lang.Scope scope = 20;</code>
   * @return The scope.
   */
  org.mojolang.mojo.lang.Scope getScope();
  /**
   * <code>.mojo.lang.Scope scope = 20;</code>
   */
  org.mojolang.mojo.lang.ScopeOrBuilder getScopeOrBuilder();

  /**
   * <code>bool implicit = 21;</code>
   * @return The implicit.
   */
  boolean getImplicit();

  /**
   * <code>.mojo.core.Object extra_info = 25;</code>
   * @return Whether the extraInfo field is set.
   */
  boolean hasExtraInfo();
  /**
   * <code>.mojo.core.Object extra_info = 25;</code>
   * @return The extraInfo.
   */
  org.mojolang.mojo.core.Object getExtraInfo();
  /**
   * <code>.mojo.core.Object extra_info = 25;</code>
   */
  org.mojolang.mojo.core.ObjectOrBuilder getExtraInfoOrBuilder();

  /**
   * <code>.mojo.lang.EntityRelationship entity_relationship = 26;</code>
   * @return Whether the entityRelationship field is set.
   */
  boolean hasEntityRelationship();
  /**
   * <code>.mojo.lang.EntityRelationship entity_relationship = 26;</code>
   * @return The entityRelationship.
   */
  org.mojolang.mojo.lang.EntityRelationship getEntityRelationship();
  /**
   * <code>.mojo.lang.EntityRelationship entity_relationship = 26;</code>
   */
  org.mojolang.mojo.lang.EntityRelationshipOrBuilder getEntityRelationshipOrBuilder();

  /**
   * <code>map&lt;string, .mojo.lang.Package.Requirement&gt; dependencies = 30;</code>
   */
  int getDependenciesCount();
  /**
   * <code>map&lt;string, .mojo.lang.Package.Requirement&gt; dependencies = 30;</code>
   */
  boolean containsDependencies(
      java.lang.String key);
  /**
   * Use {@link #getDependenciesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.mojolang.mojo.lang.Package.Requirement>
  getDependencies();
  /**
   * <code>map&lt;string, .mojo.lang.Package.Requirement&gt; dependencies = 30;</code>
   */
  java.util.Map<java.lang.String, org.mojolang.mojo.lang.Package.Requirement>
  getDependenciesMap();
  /**
   * <code>map&lt;string, .mojo.lang.Package.Requirement&gt; dependencies = 30;</code>
   */

  org.mojolang.mojo.lang.Package.Requirement getDependenciesOrDefault(
      java.lang.String key,
      org.mojolang.mojo.lang.Package.Requirement defaultValue);
  /**
   * <code>map&lt;string, .mojo.lang.Package.Requirement&gt; dependencies = 30;</code>
   */

  org.mojolang.mojo.lang.Package.Requirement getDependenciesOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, .mojo.lang.Package&gt; resolved_dependencies = 31;</code>
   */
  int getResolvedDependenciesCount();
  /**
   * <code>map&lt;string, .mojo.lang.Package&gt; resolved_dependencies = 31;</code>
   */
  boolean containsResolvedDependencies(
      java.lang.String key);
  /**
   * Use {@link #getResolvedDependenciesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, org.mojolang.mojo.lang.Package>
  getResolvedDependencies();
  /**
   * <code>map&lt;string, .mojo.lang.Package&gt; resolved_dependencies = 31;</code>
   */
  java.util.Map<java.lang.String, org.mojolang.mojo.lang.Package>
  getResolvedDependenciesMap();
  /**
   * <code>map&lt;string, .mojo.lang.Package&gt; resolved_dependencies = 31;</code>
   */

  org.mojolang.mojo.lang.Package getResolvedDependenciesOrDefault(
      java.lang.String key,
      org.mojolang.mojo.lang.Package defaultValue);
  /**
   * <code>map&lt;string, .mojo.lang.Package&gt; resolved_dependencies = 31;</code>
   */

  org.mojolang.mojo.lang.Package getResolvedDependenciesOrThrow(
      java.lang.String key);
}
