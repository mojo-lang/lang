// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mojo/lang/lang.proto

package org.mojolang.mojo.lang;

/**
 * Protobuf type {@code mojo.lang.Comment}
 */
public final class Comment extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:mojo.lang.Comment)
    CommentOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Comment.newBuilder() to construct.
  private Comment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Comment() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Comment();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Comment(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.mojolang.mojo.lang.BlockComment.Builder subBuilder = null;
            if (commentCase_ == 1) {
              subBuilder = ((org.mojolang.mojo.lang.BlockComment) comment_).toBuilder();
            }
            comment_ =
                input.readMessage(org.mojolang.mojo.lang.BlockComment.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.mojolang.mojo.lang.BlockComment) comment_);
              comment_ = subBuilder.buildPartial();
            }
            commentCase_ = 1;
            break;
          }
          case 18: {
            org.mojolang.mojo.lang.MultiLineComment.Builder subBuilder = null;
            if (commentCase_ == 2) {
              subBuilder = ((org.mojolang.mojo.lang.MultiLineComment) comment_).toBuilder();
            }
            comment_ =
                input.readMessage(org.mojolang.mojo.lang.MultiLineComment.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.mojolang.mojo.lang.MultiLineComment) comment_);
              comment_ = subBuilder.buildPartial();
            }
            commentCase_ = 2;
            break;
          }
          case 26: {
            org.mojolang.mojo.lang.Document.Builder subBuilder = null;
            if (commentCase_ == 3) {
              subBuilder = ((org.mojolang.mojo.lang.Document) comment_).toBuilder();
            }
            comment_ =
                input.readMessage(org.mojolang.mojo.lang.Document.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.mojolang.mojo.lang.Document) comment_);
              comment_ = subBuilder.buildPartial();
            }
            commentCase_ = 3;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.mojolang.mojo.lang.LangProto.internal_static_mojo_lang_Comment_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.mojolang.mojo.lang.LangProto.internal_static_mojo_lang_Comment_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.mojolang.mojo.lang.Comment.class, org.mojolang.mojo.lang.Comment.Builder.class);
  }

  private int commentCase_ = 0;
  private java.lang.Object comment_;
  public enum CommentCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BLOCK_COMMENT(1),
    MULTI_LINE_COMMENT(2),
    DOCUMENT(3),
    COMMENT_NOT_SET(0);
    private final int value;
    private CommentCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommentCase valueOf(int value) {
      return forNumber(value);
    }

    public static CommentCase forNumber(int value) {
      switch (value) {
        case 1: return BLOCK_COMMENT;
        case 2: return MULTI_LINE_COMMENT;
        case 3: return DOCUMENT;
        case 0: return COMMENT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public CommentCase
  getCommentCase() {
    return CommentCase.forNumber(
        commentCase_);
  }

  public static final int BLOCK_COMMENT_FIELD_NUMBER = 1;
  /**
   * <code>.mojo.lang.BlockComment block_comment = 1;</code>
   * @return Whether the blockComment field is set.
   */
  @java.lang.Override
  public boolean hasBlockComment() {
    return commentCase_ == 1;
  }
  /**
   * <code>.mojo.lang.BlockComment block_comment = 1;</code>
   * @return The blockComment.
   */
  @java.lang.Override
  public org.mojolang.mojo.lang.BlockComment getBlockComment() {
    if (commentCase_ == 1) {
       return (org.mojolang.mojo.lang.BlockComment) comment_;
    }
    return org.mojolang.mojo.lang.BlockComment.getDefaultInstance();
  }
  /**
   * <code>.mojo.lang.BlockComment block_comment = 1;</code>
   */
  @java.lang.Override
  public org.mojolang.mojo.lang.BlockCommentOrBuilder getBlockCommentOrBuilder() {
    if (commentCase_ == 1) {
       return (org.mojolang.mojo.lang.BlockComment) comment_;
    }
    return org.mojolang.mojo.lang.BlockComment.getDefaultInstance();
  }

  public static final int MULTI_LINE_COMMENT_FIELD_NUMBER = 2;
  /**
   * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
   * @return Whether the multiLineComment field is set.
   */
  @java.lang.Override
  public boolean hasMultiLineComment() {
    return commentCase_ == 2;
  }
  /**
   * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
   * @return The multiLineComment.
   */
  @java.lang.Override
  public org.mojolang.mojo.lang.MultiLineComment getMultiLineComment() {
    if (commentCase_ == 2) {
       return (org.mojolang.mojo.lang.MultiLineComment) comment_;
    }
    return org.mojolang.mojo.lang.MultiLineComment.getDefaultInstance();
  }
  /**
   * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
   */
  @java.lang.Override
  public org.mojolang.mojo.lang.MultiLineCommentOrBuilder getMultiLineCommentOrBuilder() {
    if (commentCase_ == 2) {
       return (org.mojolang.mojo.lang.MultiLineComment) comment_;
    }
    return org.mojolang.mojo.lang.MultiLineComment.getDefaultInstance();
  }

  public static final int DOCUMENT_FIELD_NUMBER = 3;
  /**
   * <code>.mojo.lang.Document document = 3;</code>
   * @return Whether the document field is set.
   */
  @java.lang.Override
  public boolean hasDocument() {
    return commentCase_ == 3;
  }
  /**
   * <code>.mojo.lang.Document document = 3;</code>
   * @return The document.
   */
  @java.lang.Override
  public org.mojolang.mojo.lang.Document getDocument() {
    if (commentCase_ == 3) {
       return (org.mojolang.mojo.lang.Document) comment_;
    }
    return org.mojolang.mojo.lang.Document.getDefaultInstance();
  }
  /**
   * <code>.mojo.lang.Document document = 3;</code>
   */
  @java.lang.Override
  public org.mojolang.mojo.lang.DocumentOrBuilder getDocumentOrBuilder() {
    if (commentCase_ == 3) {
       return (org.mojolang.mojo.lang.Document) comment_;
    }
    return org.mojolang.mojo.lang.Document.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (commentCase_ == 1) {
      output.writeMessage(1, (org.mojolang.mojo.lang.BlockComment) comment_);
    }
    if (commentCase_ == 2) {
      output.writeMessage(2, (org.mojolang.mojo.lang.MultiLineComment) comment_);
    }
    if (commentCase_ == 3) {
      output.writeMessage(3, (org.mojolang.mojo.lang.Document) comment_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (commentCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.mojolang.mojo.lang.BlockComment) comment_);
    }
    if (commentCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.mojolang.mojo.lang.MultiLineComment) comment_);
    }
    if (commentCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (org.mojolang.mojo.lang.Document) comment_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.mojolang.mojo.lang.Comment)) {
      return super.equals(obj);
    }
    org.mojolang.mojo.lang.Comment other = (org.mojolang.mojo.lang.Comment) obj;

    if (!getCommentCase().equals(other.getCommentCase())) return false;
    switch (commentCase_) {
      case 1:
        if (!getBlockComment()
            .equals(other.getBlockComment())) return false;
        break;
      case 2:
        if (!getMultiLineComment()
            .equals(other.getMultiLineComment())) return false;
        break;
      case 3:
        if (!getDocument()
            .equals(other.getDocument())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (commentCase_) {
      case 1:
        hash = (37 * hash) + BLOCK_COMMENT_FIELD_NUMBER;
        hash = (53 * hash) + getBlockComment().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MULTI_LINE_COMMENT_FIELD_NUMBER;
        hash = (53 * hash) + getMultiLineComment().hashCode();
        break;
      case 3:
        hash = (37 * hash) + DOCUMENT_FIELD_NUMBER;
        hash = (53 * hash) + getDocument().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.mojolang.mojo.lang.Comment parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.mojolang.mojo.lang.Comment parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.mojolang.mojo.lang.Comment parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.mojolang.mojo.lang.Comment parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.mojolang.mojo.lang.Comment prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code mojo.lang.Comment}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:mojo.lang.Comment)
      org.mojolang.mojo.lang.CommentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mojolang.mojo.lang.LangProto.internal_static_mojo_lang_Comment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mojolang.mojo.lang.LangProto.internal_static_mojo_lang_Comment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.mojolang.mojo.lang.Comment.class, org.mojolang.mojo.lang.Comment.Builder.class);
    }

    // Construct using org.mojolang.mojo.lang.Comment.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      commentCase_ = 0;
      comment_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.mojolang.mojo.lang.LangProto.internal_static_mojo_lang_Comment_descriptor;
    }

    @java.lang.Override
    public org.mojolang.mojo.lang.Comment getDefaultInstanceForType() {
      return org.mojolang.mojo.lang.Comment.getDefaultInstance();
    }

    @java.lang.Override
    public org.mojolang.mojo.lang.Comment build() {
      org.mojolang.mojo.lang.Comment result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.mojolang.mojo.lang.Comment buildPartial() {
      org.mojolang.mojo.lang.Comment result = new org.mojolang.mojo.lang.Comment(this);
      if (commentCase_ == 1) {
        if (blockCommentBuilder_ == null) {
          result.comment_ = comment_;
        } else {
          result.comment_ = blockCommentBuilder_.build();
        }
      }
      if (commentCase_ == 2) {
        if (multiLineCommentBuilder_ == null) {
          result.comment_ = comment_;
        } else {
          result.comment_ = multiLineCommentBuilder_.build();
        }
      }
      if (commentCase_ == 3) {
        if (documentBuilder_ == null) {
          result.comment_ = comment_;
        } else {
          result.comment_ = documentBuilder_.build();
        }
      }
      result.commentCase_ = commentCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.mojolang.mojo.lang.Comment) {
        return mergeFrom((org.mojolang.mojo.lang.Comment)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.mojolang.mojo.lang.Comment other) {
      if (other == org.mojolang.mojo.lang.Comment.getDefaultInstance()) return this;
      switch (other.getCommentCase()) {
        case BLOCK_COMMENT: {
          mergeBlockComment(other.getBlockComment());
          break;
        }
        case MULTI_LINE_COMMENT: {
          mergeMultiLineComment(other.getMultiLineComment());
          break;
        }
        case DOCUMENT: {
          mergeDocument(other.getDocument());
          break;
        }
        case COMMENT_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.mojolang.mojo.lang.Comment parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.mojolang.mojo.lang.Comment) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int commentCase_ = 0;
    private java.lang.Object comment_;
    public CommentCase
        getCommentCase() {
      return CommentCase.forNumber(
          commentCase_);
    }

    public Builder clearComment() {
      commentCase_ = 0;
      comment_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.lang.BlockComment, org.mojolang.mojo.lang.BlockComment.Builder, org.mojolang.mojo.lang.BlockCommentOrBuilder> blockCommentBuilder_;
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     * @return Whether the blockComment field is set.
     */
    @java.lang.Override
    public boolean hasBlockComment() {
      return commentCase_ == 1;
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     * @return The blockComment.
     */
    @java.lang.Override
    public org.mojolang.mojo.lang.BlockComment getBlockComment() {
      if (blockCommentBuilder_ == null) {
        if (commentCase_ == 1) {
          return (org.mojolang.mojo.lang.BlockComment) comment_;
        }
        return org.mojolang.mojo.lang.BlockComment.getDefaultInstance();
      } else {
        if (commentCase_ == 1) {
          return blockCommentBuilder_.getMessage();
        }
        return org.mojolang.mojo.lang.BlockComment.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     */
    public Builder setBlockComment(org.mojolang.mojo.lang.BlockComment value) {
      if (blockCommentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        comment_ = value;
        onChanged();
      } else {
        blockCommentBuilder_.setMessage(value);
      }
      commentCase_ = 1;
      return this;
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     */
    public Builder setBlockComment(
        org.mojolang.mojo.lang.BlockComment.Builder builderForValue) {
      if (blockCommentBuilder_ == null) {
        comment_ = builderForValue.build();
        onChanged();
      } else {
        blockCommentBuilder_.setMessage(builderForValue.build());
      }
      commentCase_ = 1;
      return this;
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     */
    public Builder mergeBlockComment(org.mojolang.mojo.lang.BlockComment value) {
      if (blockCommentBuilder_ == null) {
        if (commentCase_ == 1 &&
            comment_ != org.mojolang.mojo.lang.BlockComment.getDefaultInstance()) {
          comment_ = org.mojolang.mojo.lang.BlockComment.newBuilder((org.mojolang.mojo.lang.BlockComment) comment_)
              .mergeFrom(value).buildPartial();
        } else {
          comment_ = value;
        }
        onChanged();
      } else {
        if (commentCase_ == 1) {
          blockCommentBuilder_.mergeFrom(value);
        }
        blockCommentBuilder_.setMessage(value);
      }
      commentCase_ = 1;
      return this;
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     */
    public Builder clearBlockComment() {
      if (blockCommentBuilder_ == null) {
        if (commentCase_ == 1) {
          commentCase_ = 0;
          comment_ = null;
          onChanged();
        }
      } else {
        if (commentCase_ == 1) {
          commentCase_ = 0;
          comment_ = null;
        }
        blockCommentBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     */
    public org.mojolang.mojo.lang.BlockComment.Builder getBlockCommentBuilder() {
      return getBlockCommentFieldBuilder().getBuilder();
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     */
    @java.lang.Override
    public org.mojolang.mojo.lang.BlockCommentOrBuilder getBlockCommentOrBuilder() {
      if ((commentCase_ == 1) && (blockCommentBuilder_ != null)) {
        return blockCommentBuilder_.getMessageOrBuilder();
      } else {
        if (commentCase_ == 1) {
          return (org.mojolang.mojo.lang.BlockComment) comment_;
        }
        return org.mojolang.mojo.lang.BlockComment.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.lang.BlockComment block_comment = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.lang.BlockComment, org.mojolang.mojo.lang.BlockComment.Builder, org.mojolang.mojo.lang.BlockCommentOrBuilder> 
        getBlockCommentFieldBuilder() {
      if (blockCommentBuilder_ == null) {
        if (!(commentCase_ == 1)) {
          comment_ = org.mojolang.mojo.lang.BlockComment.getDefaultInstance();
        }
        blockCommentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.mojolang.mojo.lang.BlockComment, org.mojolang.mojo.lang.BlockComment.Builder, org.mojolang.mojo.lang.BlockCommentOrBuilder>(
                (org.mojolang.mojo.lang.BlockComment) comment_,
                getParentForChildren(),
                isClean());
        comment_ = null;
      }
      commentCase_ = 1;
      onChanged();;
      return blockCommentBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.lang.MultiLineComment, org.mojolang.mojo.lang.MultiLineComment.Builder, org.mojolang.mojo.lang.MultiLineCommentOrBuilder> multiLineCommentBuilder_;
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     * @return Whether the multiLineComment field is set.
     */
    @java.lang.Override
    public boolean hasMultiLineComment() {
      return commentCase_ == 2;
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     * @return The multiLineComment.
     */
    @java.lang.Override
    public org.mojolang.mojo.lang.MultiLineComment getMultiLineComment() {
      if (multiLineCommentBuilder_ == null) {
        if (commentCase_ == 2) {
          return (org.mojolang.mojo.lang.MultiLineComment) comment_;
        }
        return org.mojolang.mojo.lang.MultiLineComment.getDefaultInstance();
      } else {
        if (commentCase_ == 2) {
          return multiLineCommentBuilder_.getMessage();
        }
        return org.mojolang.mojo.lang.MultiLineComment.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     */
    public Builder setMultiLineComment(org.mojolang.mojo.lang.MultiLineComment value) {
      if (multiLineCommentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        comment_ = value;
        onChanged();
      } else {
        multiLineCommentBuilder_.setMessage(value);
      }
      commentCase_ = 2;
      return this;
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     */
    public Builder setMultiLineComment(
        org.mojolang.mojo.lang.MultiLineComment.Builder builderForValue) {
      if (multiLineCommentBuilder_ == null) {
        comment_ = builderForValue.build();
        onChanged();
      } else {
        multiLineCommentBuilder_.setMessage(builderForValue.build());
      }
      commentCase_ = 2;
      return this;
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     */
    public Builder mergeMultiLineComment(org.mojolang.mojo.lang.MultiLineComment value) {
      if (multiLineCommentBuilder_ == null) {
        if (commentCase_ == 2 &&
            comment_ != org.mojolang.mojo.lang.MultiLineComment.getDefaultInstance()) {
          comment_ = org.mojolang.mojo.lang.MultiLineComment.newBuilder((org.mojolang.mojo.lang.MultiLineComment) comment_)
              .mergeFrom(value).buildPartial();
        } else {
          comment_ = value;
        }
        onChanged();
      } else {
        if (commentCase_ == 2) {
          multiLineCommentBuilder_.mergeFrom(value);
        }
        multiLineCommentBuilder_.setMessage(value);
      }
      commentCase_ = 2;
      return this;
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     */
    public Builder clearMultiLineComment() {
      if (multiLineCommentBuilder_ == null) {
        if (commentCase_ == 2) {
          commentCase_ = 0;
          comment_ = null;
          onChanged();
        }
      } else {
        if (commentCase_ == 2) {
          commentCase_ = 0;
          comment_ = null;
        }
        multiLineCommentBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     */
    public org.mojolang.mojo.lang.MultiLineComment.Builder getMultiLineCommentBuilder() {
      return getMultiLineCommentFieldBuilder().getBuilder();
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     */
    @java.lang.Override
    public org.mojolang.mojo.lang.MultiLineCommentOrBuilder getMultiLineCommentOrBuilder() {
      if ((commentCase_ == 2) && (multiLineCommentBuilder_ != null)) {
        return multiLineCommentBuilder_.getMessageOrBuilder();
      } else {
        if (commentCase_ == 2) {
          return (org.mojolang.mojo.lang.MultiLineComment) comment_;
        }
        return org.mojolang.mojo.lang.MultiLineComment.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.lang.MultiLineComment multi_line_comment = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.lang.MultiLineComment, org.mojolang.mojo.lang.MultiLineComment.Builder, org.mojolang.mojo.lang.MultiLineCommentOrBuilder> 
        getMultiLineCommentFieldBuilder() {
      if (multiLineCommentBuilder_ == null) {
        if (!(commentCase_ == 2)) {
          comment_ = org.mojolang.mojo.lang.MultiLineComment.getDefaultInstance();
        }
        multiLineCommentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.mojolang.mojo.lang.MultiLineComment, org.mojolang.mojo.lang.MultiLineComment.Builder, org.mojolang.mojo.lang.MultiLineCommentOrBuilder>(
                (org.mojolang.mojo.lang.MultiLineComment) comment_,
                getParentForChildren(),
                isClean());
        comment_ = null;
      }
      commentCase_ = 2;
      onChanged();;
      return multiLineCommentBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.lang.Document, org.mojolang.mojo.lang.Document.Builder, org.mojolang.mojo.lang.DocumentOrBuilder> documentBuilder_;
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     * @return Whether the document field is set.
     */
    @java.lang.Override
    public boolean hasDocument() {
      return commentCase_ == 3;
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     * @return The document.
     */
    @java.lang.Override
    public org.mojolang.mojo.lang.Document getDocument() {
      if (documentBuilder_ == null) {
        if (commentCase_ == 3) {
          return (org.mojolang.mojo.lang.Document) comment_;
        }
        return org.mojolang.mojo.lang.Document.getDefaultInstance();
      } else {
        if (commentCase_ == 3) {
          return documentBuilder_.getMessage();
        }
        return org.mojolang.mojo.lang.Document.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     */
    public Builder setDocument(org.mojolang.mojo.lang.Document value) {
      if (documentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        comment_ = value;
        onChanged();
      } else {
        documentBuilder_.setMessage(value);
      }
      commentCase_ = 3;
      return this;
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     */
    public Builder setDocument(
        org.mojolang.mojo.lang.Document.Builder builderForValue) {
      if (documentBuilder_ == null) {
        comment_ = builderForValue.build();
        onChanged();
      } else {
        documentBuilder_.setMessage(builderForValue.build());
      }
      commentCase_ = 3;
      return this;
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     */
    public Builder mergeDocument(org.mojolang.mojo.lang.Document value) {
      if (documentBuilder_ == null) {
        if (commentCase_ == 3 &&
            comment_ != org.mojolang.mojo.lang.Document.getDefaultInstance()) {
          comment_ = org.mojolang.mojo.lang.Document.newBuilder((org.mojolang.mojo.lang.Document) comment_)
              .mergeFrom(value).buildPartial();
        } else {
          comment_ = value;
        }
        onChanged();
      } else {
        if (commentCase_ == 3) {
          documentBuilder_.mergeFrom(value);
        }
        documentBuilder_.setMessage(value);
      }
      commentCase_ = 3;
      return this;
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     */
    public Builder clearDocument() {
      if (documentBuilder_ == null) {
        if (commentCase_ == 3) {
          commentCase_ = 0;
          comment_ = null;
          onChanged();
        }
      } else {
        if (commentCase_ == 3) {
          commentCase_ = 0;
          comment_ = null;
        }
        documentBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     */
    public org.mojolang.mojo.lang.Document.Builder getDocumentBuilder() {
      return getDocumentFieldBuilder().getBuilder();
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     */
    @java.lang.Override
    public org.mojolang.mojo.lang.DocumentOrBuilder getDocumentOrBuilder() {
      if ((commentCase_ == 3) && (documentBuilder_ != null)) {
        return documentBuilder_.getMessageOrBuilder();
      } else {
        if (commentCase_ == 3) {
          return (org.mojolang.mojo.lang.Document) comment_;
        }
        return org.mojolang.mojo.lang.Document.getDefaultInstance();
      }
    }
    /**
     * <code>.mojo.lang.Document document = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.mojolang.mojo.lang.Document, org.mojolang.mojo.lang.Document.Builder, org.mojolang.mojo.lang.DocumentOrBuilder> 
        getDocumentFieldBuilder() {
      if (documentBuilder_ == null) {
        if (!(commentCase_ == 3)) {
          comment_ = org.mojolang.mojo.lang.Document.getDefaultInstance();
        }
        documentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.mojolang.mojo.lang.Document, org.mojolang.mojo.lang.Document.Builder, org.mojolang.mojo.lang.DocumentOrBuilder>(
                (org.mojolang.mojo.lang.Document) comment_,
                getParentForChildren(),
                isClean());
        comment_ = null;
      }
      commentCase_ = 3;
      onChanged();;
      return documentBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:mojo.lang.Comment)
  }

  // @@protoc_insertion_point(class_scope:mojo.lang.Comment)
  private static final org.mojolang.mojo.lang.Comment DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.mojolang.mojo.lang.Comment();
  }

  public static org.mojolang.mojo.lang.Comment getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Comment>
      PARSER = new com.google.protobuf.AbstractParser<Comment>() {
    @java.lang.Override
    public Comment parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Comment(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Comment> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Comment> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.mojolang.mojo.lang.Comment getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

